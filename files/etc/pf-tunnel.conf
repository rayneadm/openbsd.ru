# $RuOBSD: pf-tunnel.conf,v 1.3 2009/02/02 23:58:56 form Exp $

# Пример настройки PF маршрутизатора, устанавливающего IPSec тунели,
# являющегося также почтовым сервером, сервером имен, WWW и FTP сервером,
# с трансляцией адресов и переадресацией некоторых TCP сервисов на
# внутренний сервер.
#
# +--------------+
# |              |---- 10.0.0.0/24
# | 89.31.114.53 |
# |              |---- 10.11.12.0/24
# +--------------+
#    |
#   WAN
#    .
#    .
#   WAN              LAN
#    |      +-------------+---------
#    |      |             |
# +-sk0----dc0-+  +----------------+
# |            |  |  10.10.10.194  |
# +------------+  +----------------+
#
# Файлы:
#	/etc/mail/spamd.bypass
#		- список адресов/сетей которые требуется пропускать к
#		  почтовому серверу без проверки

# Сетевые интерфейсы.
#
ext_if		= "sk0"
int_if		= "dc0"

# Обслуживаемые TCP и UDP сервисы. В данный список не требуется
# включать tcp/smtp.
#
tcp_svc		= "ftp ssh domain www smtps imaps"
udp_svc		= "domain"

# TCP сервисы, обслуживаемые внутренним сервером.
#
rdr_tcp_svc	= "telnet"
rdr_tcp_hst	= "10.10.10.194"

# Хосты, с которыми устанавливаются IPSec тунели.
#
esp_peers	= "89.31.114.53"


# Таблицы белого списка spamd и списка сетей, которые нужно
# пропускать к почтовому серверу без проверки.
#
table <spamd-white> persist
table <spamd-bypass> file "/etc/mail/spamd.bypass"

# Таблица черного списка (заполняется из sshwatchd или другой программы).
#
table <blocked> persist

# Таблица сетей, которые доступны через тунели.
#
table <tunnel-networks> const {
	10.0.0.0/24
	10.11.12.20/24
}


# Отключить фильтрацию трафика на loopback, туннельных и
# IPSec интерфейсах.
#
set skip on { lo enc0 }


# Выполнять нормализацию входящих пакетов.
#
scrub in


# Транслировать внутренние адреса в (основной) адрес внешнего
# интерфейса.
#
nat on $ext_if from !($ext_if) -> ($ext_if:0)

# Не пропускать адреса из черного списка к переадресованным
# сервисам.
#
no rdr on $ext_if from <blocked>

# Подключить правила трансляции/переадресации, создаваемые
# ftp-proxy.
#
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"

# Пропустить FTP соединения через ftp-proxy кроме локальных
# соединений и сетей, доступных через тунели.
#
no rdr on $int_if inet proto tcp to <tunnel-networks> port ftp
rdr on $int_if inet proto tcp to !(self) port ftp -> 127.0.0.1 port 8021

# Перенаправить входящие SMTP сессии (для адресов, не входящих в белый
# список spamd) в spamd для проверки.
#
no rdr on $ext_if inet proto tcp from <spamd-bypass> to port smtp
rdr pass on $ext_if inet proto tcp from !<spamd-white> to ($ext_if) port smtp \
	-> 127.0.0.1 port spamd

# Переадресовать TCP сервисы, обслуживаемые внутренним сервером.
#
rdr pass on $ext_if inet proto tcp to ($ext_if) port { $rdr_tcp_svc } \
	-> $rdr_tcp_hst

# Разрешить обращение к переадресованным сервисам из внутренней сети.
#
rdr pass on $int_if inet proto tcp to ($ext_if) port { $rdr_tcp_svc } \
	tag RDR_INT_IF -> $rdr_tcp_hst
nat on $int_if tagged RDR_INT_IF -> ($int_if:0)


# Предотвращение IP spoofing. Принудительная блокировка адресов из
# черного списка.
#
antispoof quick for ($int_if)
block in quick on $ext_if to !($ext_if)
block in quick on $ext_if from <blocked>

# Подключить правила, создаваемые ftp-proxy.
#
anchor "ftp-proxy/*"

# По умолчанию блокировать и писать в лог любой трафик на внешнем
# интерфейсе, возвращая RST для входящих TCP соединений.
#
block log on $ext_if
block return-rst in log on $ext_if inet proto tcp

# Разрешить исходящий трафик.
#
pass out on $ext_if inet

# Разрешить входящие ICMP ping пакеты. Остальные ICMP относятся к
# TCP/UDP и разрешаются их статами.
#
pass in on $ext_if inet proto icmp to ($ext_if) icmp-type echoreq code 0

# Разрешить подключения к обслуживаемым TCP сервисам.
#
pass in on $ext_if inet proto tcp to ($ext_if) port { $tcp_svc }

# Разрешить SMTP сессии для адресов, прошедших проверку. Писать их в log
# для spamlogd.
#
pass in log on $ext_if inet proto tcp to ($ext_if) port smtp

# Разрешить входящие TCP соединения для FTP сервера (passive mode) и
# FTP клиента (active mode).
#
pass in on $ext_if inet proto tcp to ($ext_if) port > 49151 user >= 0

# Разрешить обращение к обслуживаемым UDP сервисам.
#
pass in on $ext_if inet proto udp to ($ext_if) port { $udp_svc }

# Разрешить установку IPSec тунелей.
#
pass in on $ext_if inet proto udp from { $esp_peers } to ($ext_if) \
	port isakmp
pass in on $ext_if inet proto esp from { $esp_peers } to ($ext_if)
